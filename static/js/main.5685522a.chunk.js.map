{"version":3,"sources":["Components/tictactoe.jsx","App.js","serviceWorker.js","index.js"],"names":["Tictactoe","useState","count","setCount","player","setPlayer","player1Games","setPlayer1Games","player2Games","setPlayer2Games","useEffect","Player1","window","localStorage","getItem","Player2","parseInt","setContent","e","target","innerHTML","value","togglePlayer","checkWinner","checkHorizontal","checkVertical","checkDiagonal","forEach","row","first","document","getElementById","second","third","check","column","a","b","c","undefined","classList","add","alert","location","reload","setItem","Fragment","style","height","className","Button","color","size","onClick","removeItem","Row","Col","id","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5685522a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\n// import classnames from \"classnames\";\r\n\r\nexport default function Tictactoe() {\r\n\tconst [count, setCount] = useState(1);\r\n\r\n\tconst [player, setPlayer] = useState(1);\r\n\r\n\tconst [player1Games, setPlayer1Games] = useState(0);\r\n\tconst [player2Games, setPlayer2Games] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst Player1 = window.localStorage.getItem(\"player1\");\r\n\t\tconst Player2 = window.localStorage.getItem(\"player2\");\r\n\t\tif (Player1 !== null) {\r\n\t\t\tsetPlayer1Games(parseInt(Player1));\r\n\t\t}\r\n\t\tif (Player2 !== null) {\r\n\t\t\tsetPlayer2Games(parseInt(Player2));\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst setContent = (e) => {\r\n\t\tlet val = e.target.innerHTML;\r\n\t\tif (val === \"\" && count <= 9) {\r\n\t\t\te.target.value = player;\r\n\t\t\tif (count % 2 === 0) {\r\n\t\t\t\te.target.innerHTML =\r\n\t\t\t\t\t'<p class=\"display-1 t-shad font-weight-bold\">X</p>';\r\n\t\t\t} else {\r\n\t\t\t\te.target.innerHTML =\r\n\t\t\t\t\t'<p class=\"display-1 t-shad font-weight-bold\">O</p>';\r\n\t\t\t}\r\n\t\t\tsetCount(count + 1);\r\n\t\t\ttogglePlayer();\r\n\t\t\tcheckWinner();\r\n\t\t}\r\n\t};\r\n\r\n\tconst reset = () => {\r\n\t\tsetPlayer1Games(0);\r\n\t\tsetPlayer2Games(0);\r\n\t\twindow.localStorage.removeItem(\"player1\");\r\n\t\twindow.localStorage.removeItem(\"player2\");\r\n\t\twindow.location.reload();\r\n\t};\r\n\tconst togglePlayer = () => {\r\n\t\tif (player === 1) {\r\n\t\t\tsetPlayer(2);\r\n\t\t} else {\r\n\t\t\tsetPlayer(1);\r\n\t\t}\r\n\t};\r\n\r\n\tconst checkWinner = () => {\r\n\t\t//horizontal check\r\n\t\tcheckHorizontal();\r\n\t\tcheckVertical();\r\n\t\tcheckDiagonal(\"a1\", \"b2\", \"c3\");\r\n\t\tcheckDiagonal(\"c1\", \"b2\", \"a3\");\r\n\t};\r\n\r\n\tconst checkHorizontal = () => {\r\n\t\tconst rows = [\"a\", \"b\", \"c\"];\r\n\r\n\t\trows.forEach((row) => {\r\n\t\t\tconst first = document.getElementById(row + \"1\");\r\n\t\t\tconst second = document.getElementById(row + \"2\");\r\n\t\t\tconst third = document.getElementById(row + \"3\");\r\n\r\n\t\t\tcheck(first, second, third);\r\n\t\t});\r\n\t};\r\n\tconst checkVertical = () => {\r\n\t\tconst columns = [\"1\", \"2\", \"3\"];\r\n\r\n\t\tcolumns.forEach((column) => {\r\n\t\t\tconst first = document.getElementById(\"a\" + column);\r\n\t\t\tconst second = document.getElementById(\"b\" + column);\r\n\t\t\tconst third = document.getElementById(\"c\" + column);\r\n\r\n\t\t\tcheck(first, second, third);\r\n\t\t});\r\n\t};\r\n\r\n\tconst checkDiagonal = (a, b, c) => {\r\n\t\tconst first = document.getElementById(a);\r\n\t\tconst second = document.getElementById(b);\r\n\t\tconst third = document.getElementById(c);\r\n\r\n\t\tcheck(first, second, third);\r\n\t};\r\n\r\n\tconst check = (first, second, third) => {\r\n\t\tif (\r\n\t\t\tfirst.value !== undefined &&\r\n\t\t\tfirst.value === second.value &&\r\n\t\t\tsecond.value === third.value\r\n\t\t) {\r\n\t\t\tfirst.classList.add(\"red\");\r\n\t\t\tsecond.classList.add(\"red\");\r\n\t\t\tthird.classList.add(\"red\");\r\n\t\t\tif (!alert(\"Player \" + first.value + \" is the winner\")) {\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t}\r\n\t\t\tsetCount(10);\r\n\t\t\tif (first.value === 1) {\r\n\t\t\t\twindow.localStorage.setItem(\"player1\", player1Games + 1);\r\n\t\t\t} else {\r\n\t\t\t\twindow.localStorage.setItem(\"player2\", player2Games + 1);\r\n\t\t\t}\r\n\t\t} else if (count === 9) {\r\n\t\t\tsetCount(10);\r\n\t\t\tif (!alert(\"It's a draw\")) {\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div style={{ height: \"7vh\" }} className=\"d-flex align-items-center\">\r\n\t\t\t\t<span className=\"float-left ml-2\">Player {player}'s turn</span>\r\n\t\t\t\t<span className=\"m-auto\">\r\n\t\t\t\t\tGames won 1:{player1Games} 2:{player2Games}\r\n\t\t\t\t</span>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tclassName=\"m-auto\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\treset();\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tRESET\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t<Row style={{ height: \"30vh\" }}>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tid=\"a1\"\r\n\t\t\t\t\tonClick={setContent}\r\n\t\t\t\t\tclassName=\"h-100 w-100 border d-flex align-items-center justify-content-center pad\"\r\n\t\t\t\t></Col>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tid=\"a2\"\r\n\t\t\t\t\tonClick={setContent}\r\n\t\t\t\t\tclassName=\"h-100 w-100 border  d-flex align-items-center justify-content-center pad\"\r\n\t\t\t\t></Col>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tid=\"a3\"\r\n\t\t\t\t\tonClick={setContent}\r\n\t\t\t\t\tclassName=\"h-100 w-100 border  d-flex align-items-center justify-content-center pad\"\r\n\t\t\t\t></Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row style={{ height: \"30vh\" }}>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tid=\"b1\"\r\n\t\t\t\t\tonClick={setContent}\r\n\t\t\t\t\tclassName=\"h-100 w-100 border  d-flex align-items-center justify-content-center pad\"\r\n\t\t\t\t></Col>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tid=\"b2\"\r\n\t\t\t\t\tonClick={setContent}\r\n\t\t\t\t\tclassName=\"h-100 w-100 border  d-flex align-items-center justify-content-center pad\"\r\n\t\t\t\t></Col>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tid=\"b3\"\r\n\t\t\t\t\tonClick={setContent}\r\n\t\t\t\t\tclassName=\"h-100 w-100 border  d-flex align-items-center justify-content-center pad\"\r\n\t\t\t\t></Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row style={{ height: \"30vh\" }}>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tid=\"c1\"\r\n\t\t\t\t\tonClick={setContent}\r\n\t\t\t\t\tclassName=\"h-100 w-100 border  d-flex align-items-center justify-content-center pad\"\r\n\t\t\t\t></Col>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tid=\"c2\"\r\n\t\t\t\t\tonClick={setContent}\r\n\t\t\t\t\tclassName=\"h-100 w-100 border  d-flex align-items-center justify-content-center pad\"\r\n\t\t\t\t></Col>\r\n\t\t\t\t<Col\r\n\t\t\t\t\tid=\"c3\"\r\n\t\t\t\t\tonClick={setContent}\r\n\t\t\t\t\tclassName=\"h-100 w-100 border  d-flex align-items-center justify-content-center pad\"\r\n\t\t\t\t></Col>\r\n\t\t\t</Row>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Tictactoe from \"./Components/tictactoe\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Tictactoe />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}